@model BKBBoard.Models.MeetingViewModel

@{
    ViewBag.Title = "Create Meeting";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
@if (TempData["errMsg"] != null)
{
    <h3 style="color:red;">@TempData["errMsg"]</h3>
}
else
{
    <h3 style="color:green;">@TempData["retMsg"]</h3>
}


<script type="text/javascript">
    $(document).ready(function () {
        $("#btnSubmit").click(function () {
            debugger;
            var message = validateInput();

            if (message != "true") {
                alert(message);
                return false;
            }
        });
    });
    function validateInput() {
        debugger;
        var message = "";
        var MeetingNo = $("#MeetingNo").val();
        if (MeetingNo.length == 0) {
            message = message + "Please input MeetingNo *\n";
        }
        var Title = $("#Title").val();
        if (Title.length == 0) {
            message = message + "Please input Title *\n";
        }

        var Date = $("#mDate").val();
        if (Date.length == 0) {
            message = message + "Please input Date *\n";
        }

        var Agendafile = $("#Agendafile").val(); //Bind to the first name with class f-name01
        if (Agendafile.length == 0) {
            message = message + "Please select Agendafile*\n";
        }
        var ext = Agendafile.split('.').pop().toLowerCase();
        if ($.inArray(ext, ['pdf', 'docx', 'doc', 'jpg', 'jpeg']) == -1) {
            message = message + "Invalid Agenda File Type*\n";
        }

        var i = 1;
        $('tr.memoRows').each(function () {
            debugger
            var department = $(this).find('.department01').val();
            if (department.length == 0) {
                message = message + "Please select department at row " + i + "*\n";
            }
            var subject = $(this).find('.subject01').val();
            if (subject.length == 0) {
                message = message + "Please input subject at row " + i + "*\n";
            }
            var memoFile = $(this).find('.memofile01').val();
            if (memoFile.length > 0) {
                var memoExt = memoFile.split('.').pop().toLowerCase();
                if ($.inArray(ext, ['pdf', 'docx', 'doc', 'jpg', 'jpeg']) == -1) {
                    message = message + "Invalid Memo File Type*\n";
                }
            }
            i++;
        });

        return message.length == 0 ? "true" : message;
    }
</script>

@using (Html.BeginForm("CreateMeeting", "Meeting", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-6">
            @Html.LabelFor(model => model.mMaster.MeetingType, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.mMaster.MeetingType, new SelectList(Model.meetingTypeList, "value", "text"), "Select List",
                        new { @class = "form-control input-sm", @id = "MeetingType" })
            @Html.ValidationMessageFor(model => model.mMaster.MeetingType, "", new { @class = "text-danger" })
        </div>
        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-6">
            @Html.LabelFor(model => model.mMaster.MeetingNo, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.mMaster.MeetingNo, new { htmlAttributes = new { @class = "form-control", @id = "MeetingNo" } })
            @Html.ValidationMessageFor(model => model.mMaster.MeetingNo, "", new { @class = "text-danger" })
        </div>
        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-6">
            @Html.LabelFor(model => model.mMaster.Title, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.mMaster.Title, new { htmlAttributes = new { @class = "form-control", @id = "Title" } })
            @Html.ValidationMessageFor(model => model.mMaster.Title, "", new { @class = "text-danger" })
        </div>
    
        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-6">
            @Html.LabelFor(model => model.Agendafile, htmlAttributes: new { @class = "control-label" })
            <input type="file" name="Agendafile" id="Agendafile" class="form-control">
        </div>

        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-6">
            @Html.LabelFor(model => model.Minutesfile, htmlAttributes: new { @class = "control-label" })
            <input type="file" name="Minutesfile" id="Minutesfile" class="form-control">
        </div>
        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-6">
            @Html.LabelFor(model => model.mMaster.Date, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.mMaster.Date, new { htmlAttributes = new { @class = "form-control", @id = "mDate" } })
            @Html.ValidationMessageFor(model => model.mMaster.Date, "", new { @class = "text-danger" })
        </div>
    </div>


    <br />
    <legend style="font-size:15px;font-weight:bold;">Upload Memos</legend>
    <input type="button" id="addMore" name="addMore" value="Add" class="form-control btn-primary input-sm addMore01" style="background-color: #07889B; width: 10%; margin-left: 93%; margin-right:6%"  />

    <div style="height: 40%; ">
        <div class="row table-responsive" style="height: 344px; overflow: auto;">
            <br />
            <div class="table-holder">

                <table class="table-responsive" id="memoTable">

                    <tr>
                        <th style="width:4.4%;text-align:center;">SL No</th>
                        <th style="width:53%;text-align:center;">Subject</th>
                        <th style="width:22%;text-align:center;">Department</th>
                        <th style="width:53%;text-align:center;">Upload</th>
                        <th style="width:6.25%;text-align:center;"></th>
                    </tr>

                    <tr class="memoRows">
                        <td><input type="text" id="slNo" value="1" name="slNo" class="form-control input-sm slNo01" readonly /></td>
                        <td><input type="text" id="subject" name="MemoSubject" class="form-control input-sm subject01" /></td>
                        <td><select name="department" id="department" class="form-control input-sm department01"  required></select></td>
                        <td><input type="file" id="Memofile" name="Memofile" class="form-control input-sm memofile01" /></td>
                        <td><h6 color="grey" style="margin-left: 2px">Fixed Row</h6></td>
                    </tr>
                </table>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-offset-6 col-md-6">
                <input type="submit" value="Create" id="btnSubmit" class="btn btn-default btn-primary" style="background-color: #07889B" />
            </div>
        </div>
    </div>

}
<script src="~/scripts/addMemo.js"></script>
<script>
    $(function () {
        $("#department").empty();
        $("#MeetingNo").focusout(function () {
            $("#Title").val($("#MeetingType option:selected").text() + ' - ' + ($("#MeetingNo").val()));
        }
        )
        ;


        //taking local storage start

        $("#MeetingType").focusout(function () {
            localStorage.setItem("MeetingType", $("#MeetingType").val());
        });
        $("#MeetingType").val(localStorage.getItem("MeetingType"));


        $("#MeetingNo").focusout(function () {
            localStorage.setItem("MeetingNo", $("#MeetingNo").val());
        });
        $("#MeetingNo").val(localStorage.getItem("MeetingNo"));

        $("#Title").focusout(function () {
            localStorage.setItem("Title", $("#Title").val());
        });
        $("#Title").val(localStorage.getItem("Title"));

        $("#mDate").focusout(function () {
            localStorage.setItem("mDate", $("#mDate").val());
        });
        $("#mDate").val(localStorage.getItem("mDate"));

        $("#subject").focusout(function () {
            localStorage.setItem("subject", $("#subject").val());
        });
        $("#subject").val(localStorage.getItem("subject"));

        //taking local storage end


        $.ajax({
            type: 'POST',
            url: '@Url.Action("getDepartment")',
            dataType: 'json',
            data: {},
            success: function (response) {
                $("#department").append('<option value="Select">'
                                            + "---Select Department---" + '</option>');
                $.each(response, function (i, response) {
                    $("#department").append('<option value="'
                                               + response.Value + '">'
                                         + response.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('Failed.' + ex);
            }
        });
    });
</script>

<script src="~/scripts/select2.min.js"></script>
<link href="~/Content/css/select2.min.css" rel="stylesheet" />
<script type="text/javascript">
    $(document).ready(function () {
        $("#MeetingType").val($("#MeetingType option:selected").val());
        $("#department").val($("#department option:selected").val());
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#MeetingType").select2();
        $("#department").select2();
    });
</script>

